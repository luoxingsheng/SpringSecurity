<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lxs.graduate.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.lxs.graduate.entity.Order" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="p_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sell_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="buy_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="order_status" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="order_money" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="order_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_address" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="order_receiver" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="order_phone" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, p_id, sell_id, buy_id, order_num, order_time, order_status, order_money, order_score,
    order_address, order_receiver, order_phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lxs.graduate.entity.Order" >
    insert into tb_order (id, p_id, sell_id, 
      buy_id, order_num, order_time, 
      order_status, order_money, order_score,
      order_address, order_receiver, order_phone
      )
    values (#{id,jdbcType=BIGINT}, #{pId,jdbcType=INTEGER}, #{sellId,jdbcType=INTEGER}, 
      #{buyId,jdbcType=INTEGER}, #{orderNum,jdbcType=INTEGER}, #{orderTime,jdbcType=VARCHAR}, 
      #{orderStatus,jdbcType=VARCHAR}, #{orderMoney,jdbcType=DOUBLE}, #{orderScore,jdbcType=INTEGER},
      #{orderAddress,jdbcType=VARCHAR}, #{orderReceiver,jdbcType=VARCHAR}, #{orderPhone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lxs.graduate.entity.Order" >
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
      <if test="sellId != null" >
        sell_id,
      </if>
      <if test="buyId != null" >
        buy_id,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="orderMoney != null" >
        order_money,
      </if>
      <if test="orderScore != null" >
        order_score,
      </if>
      <if test="orderAddress != null" >
        order_address,
      </if>
      <if test="orderReceiver != null" >
        order_receiver,
      </if>
      <if test="orderPhone != null" >
        order_phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="sellId != null" >
        #{sellId,jdbcType=INTEGER},
      </if>
      <if test="buyId != null" >
        #{buyId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderMoney != null" >
        #{orderMoney,jdbcType=DOUBLE},
      </if>
      <if test="orderScore != null" >
        #{orderScore,jdbcType=VARCHAR},
      </if>
      <if test="orderAddress != null" >
        #{orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderReceiver != null" >
        #{orderReceiver,jdbcType=VARCHAR},
      </if>
      <if test="orderPhone != null" >
        #{orderPhone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lxs.graduate.entity.Order" >
    update tb_order
    <set >
      <if test="pId != null" >
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="sellId != null" >
        sell_id = #{sellId,jdbcType=INTEGER},
      </if>
      <if test="buyId != null" >
        buy_id = #{buyId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderMoney != null" >
        order_money = #{orderMoney,jdbcType=DOUBLE},
      </if>
      <if test="orderScore != null" >
        order_score = #{orderScore,jdbcType=INTEGER},
      </if>
      <if test="orderAddress != null" >
        order_address = #{orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderReceiver != null" >
        order_receiver = #{orderReceiver,jdbcType=VARCHAR},
      </if>
      <if test="orderPhone != null" >
        order_phone = #{orderPhone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lxs.graduate.entity.Order" >
    update tb_order
    set p_id = #{pId,jdbcType=INTEGER},
      sell_id = #{sellId,jdbcType=INTEGER},
      buy_id = #{buyId,jdbcType=INTEGER},
      order_num = #{orderNum,jdbcType=INTEGER},
      order_time = #{orderTime,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      order_money = #{orderMoney,jdbcType=DOUBLE},
      order_score = #{orderScore,jdbcType=INTEGER},
      order_address = #{orderAddress,jdbcType=VARCHAR},
      order_receiver = #{orderReceiver,jdbcType=VARCHAR},
      order_phone = #{orderPhone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findOrderByBuyId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from tb_order
    where buy_id=#{buy_id,jdbcType=INTEGER} and (order_status='交易成功' or order_status='评分成功')
  </select>
  <select id="findOrderBySellId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from tb_order
    where sell_id=#{sell_id,jdbcType=INTEGER} and order_status='交易成功'
  </select>
  <select id="findUnfinishedOrders" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from tb_order
    where buy_id=#{id,jdbcType=INTEGER} and order_status='待交易'</select>
  <select id="findAllOrders" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_order
  </select>
</mapper>
