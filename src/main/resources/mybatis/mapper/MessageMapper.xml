<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lxs.graduate.dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.lxs.graduate.entity.Message" >
    <constructor >
      <idArg column="m_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="from_user" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="to_user" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="m_title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="isTransport" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    m_id, from_user, to_user, m_title, content, create_time, isTransport
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from message
    where m_id = #{mId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where m_id = #{mId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lxs.graduate.entity.Message" >
    insert into message (m_id, from_user, to_user, 
      m_title, content, create_time, 
      isTransport)
    values (#{mId,jdbcType=INTEGER}, #{fromUser,jdbcType=VARCHAR}, #{toUser,jdbcType=VARCHAR}, 
      #{mTitle,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{istransport,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lxs.graduate.entity.Message" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mId != null" >
        m_id,
      </if>
      <if test="fromUser != null" >
        from_user,
      </if>
      <if test="toUser != null" >
        to_user,
      </if>
      <if test="mTitle != null" >
        m_title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="istransport != null" >
        isTransport,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mId != null" >
        #{mId,jdbcType=INTEGER},
      </if>
      <if test="fromUser != null" >
        #{fromUser,jdbcType=VARCHAR},
      </if>
      <if test="toUser != null" >
        #{toUser,jdbcType=VARCHAR},
      </if>
      <if test="mTitle != null" >
        #{mTitle,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="istransport != null" >
        #{istransport,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lxs.graduate.entity.Message" >
    update message
    <set >
      <if test="fromUser != null" >
        from_user = #{fromUser,jdbcType=VARCHAR},
      </if>
      <if test="toUser != null" >
        to_user = #{toUser,jdbcType=VARCHAR},
      </if>
      <if test="mTitle != null" >
        m_title = #{mTitle,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="istransport != null" >
        isTransport = #{istransport,jdbcType=INTEGER},
      </if>
    </set>
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lxs.graduate.entity.Message" >
    update message
    set from_user = #{fromUser,jdbcType=VARCHAR},
      to_user = #{toUser,jdbcType=VARCHAR},
      m_title = #{mTitle,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      isTransport = #{istransport,jdbcType=INTEGER}
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
  <select id="findMessageByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from message
    where (from_user=#{name1,jdbcType=VARCHAR} and to_user=#{name2,jdbcType=VARCHAR})
    or (from_user=#{name2,jdbcType=VARCHAR} and to_user=#{name1,jdbcType=VARCHAR})</select>
  <select id="findList" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from message
    where from_user=#{name,jdbcType=VARCHAR} or to_user=#{name,jdbcType=VARCHAR}
    group by from_user
    order by create_time desc</select>
</mapper>